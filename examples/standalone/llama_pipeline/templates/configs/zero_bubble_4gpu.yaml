-- extends 'project.yaml'

-- block config_metadata
    == super()
    -- set ns.config_name = "Interleaved Zero Bubble with 4 GPUs"
    -- set ns.config_description = "Pipeline with 4 GPUs"
    -- set ns.log_name = "izb_4gpu"
    -- set ns.nproc_per_node = 4
-- endblock config_metadata

-- block trainer_definition
    -- include 'experiment.trainer_config'
-- endblock trainer_definition

#-------------------- experiment.trainer_config --------------------
-- extends 'project.trainer_config'


-- block trainer_meta_config
    == super()
    -- set trainer_def.pipeline_segments = 8
    -- set trainer_def.pipeline_microbatches = 8
-- endblock trainer_meta_config


-- block trainer_args
    == super()

    # Experiment Overrides
    is_multistage: True
    stages_per_rank: 2

    # For reasons TBD, using a separate model / pipeline for eval generates non-deterministic
    # memory-spikes on eval, with random OOM. Until this is resolved, it's safer to run with
    # the unified model.
    
    # Note that this model runs in train mode, vs eval mode, so the eval loss is not directly comparable to
    # a pipeline with a seperate eval pipeline.
    unified_model: True

    # This needs to match the train batch size, when using unified_model: True
    per_device_eval_batch_size: 8
-- endblock trainer_args


-- block trainer_constructor
    == super()
    
    # Experiment Overrides
    pipe_schedule_factory: !lambda:torch.distributed.pipelining:ScheduleInterleavedZeroBubble
-- endblock trainer_constructor
