-- extends 'project.yaml'

-- block config_metadata
    == super()
    -- set ns.config_name = "RoPE Attention"
    -- set ns.config_description = "RoPE (Rotary Position Embedding) attention mechanism with PyTorch SDPA"
    -- set ns.model_name = "attention_rope"
    -- set ns.log_name = "attention_rope"
-- endblock config_metadata


-- block construct_new_model
    -- include 'experiment.model'
-- endblock construct_new_model

#-------------------- experiment.model --------------------
-- extends 'project.model_config'


-- block model_config
    == super()
    # Larger model configuration for GQA testing
    hidden_size: 512
    num_attention_heads: 4
    dim_feedforward: 1024
    num_hidden_layers: 6
    d_head: 128 # Must be hidden_size // num_attention_heads
    rope_theta: 10000.0
<< endblock model_config


-- block positional_encoder
# Use NullPE since RoPE is embedded in attention layers
positional_encoder: &positional_encoder !factory:.null_pe:NullPE@positional_encoder
<< endblock positional_encoder


-- block rel_positional_encoder
relative_pe: &relative_pe !singleton:.real_rotary_embeddings:RealRotaryPE@relative_pe
    d_head: !var "d_head"
    max_sequence_length: !var "max_sequence_length"
    rope_theta: !var "rope_theta"
<< endblock rel_positional_encoder


-- block attention_factory
attention_factory: &attention_factory !partial:.causal_rpe_attn:CausalRpeAttn@attention_factory
    d_model: !var "hidden_size"
    num_heads: !var "num_attention_heads"
    dropout: !var "attention_dropout"
    bias: False
    sdpa_function: !partial:torch.nn.functional:scaled_dot_product_attention []
    pos_encoder: *relative_pe
<< endblock attention_factory


-- block model_factory
model_factory: &model_factory !factory:.causal_lm:CasualLM@model_factory
    loss_fn: *loss_fn
    input_encoder: *input_encoder
    output_decoder: *output_decoder
    layer_stack: *layer_stack
    init_weights: *init_weights
<< endblock model_factory
