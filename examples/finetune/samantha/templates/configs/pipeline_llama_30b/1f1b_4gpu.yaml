## Note: This project assumes that the model has manual activation checkpointing
## enabled!
## This actually works!
-- extends 'samantha.yaml'

-- block config_metadata
    == super()
    -- set ns.config_name = "Samantha Llama 30B 1F!B Pipe x4"
    -- set ns.config_description = "Train Samantha on 1F!B 4 GPU Pipeline"
    -- set ns.log_name = "1f1b_4gpu"
    -- set ns.trainer_class = 'trainers/pipeline_trainer.yaml'
    -- set ns.nproc_per_node = 4
    -- set ns.model_name = "llama-2-30b-fg"
-- endblock config_metadata

-- block datacollator
    == super()
    padding: "max_length" # Required for pipeline
    max_length: 1300
-- endblock datacollator

-- block trainer_definition
    -- include 'default.trainer_config'
-- endblock trainer_definition


-- block construct_new_model
    -- include 'default.model_config'
-- endblock construct_new_model

#-------------------- default.trainer_config --------------------
-- extends 'samantha.trainer_config'


-- block trainer_meta_config
    == super()
    -- set trainer_def.pipeline_layers = 60
    -- set trainer_def.split_layer_prefix = "causal_lm.layer_stack.layers."
    -- set trainer_def.pipeline_segments = 4
    -- set trainer_def.pipeline_microbatches = 8
-- endblock trainer_meta_config


-- block trainer_constructor
    == super()
    # Config Overrides
    pipe_schedule_factory: !lambda:torch.distributed.pipelining:Schedule1F1B
-- endblock trainer_constructor


-- block trainer_args
    == super()
    eval_steps: 11
    # Config overrides
    per_device_eval_batch_size: 12
    fuse_optim_with_backward: True
    enable_activation_offloading: True
    max_grad_norm: null
    enable_activation_checkpoints: True
-- endblock trainer_args
