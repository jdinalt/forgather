-- extends 'types/tokenizer/tokenizer.yaml'

-- block config_metadata
    == super()
    -- set ns.config_name = "Custom BPE Tokenizer"
    -- set ns.config_description = "A custom BPE tokenizer definition."
    ## -- set ns.dataset_id = 'dataset_id'
    ## -- set ns.output_dir = joinpath(ns.tokenizers_dir, 'custom_tokenizer')
-- endblock config_metadata


-- block tokenizer_trainer
    == super()
    model: !singleton:tokenizers:models.BPE
        cache_capacity: 16
        unk_token: "{{ ns.unk_token }}"
        byte_fallback: True
    normalizer: !singleton:tokenizers:normalizers.NFC []
    pre_tokenizer: !singleton:tokenizers:pre_tokenizers.ByteLevel []
    decoder: !singleton:tokenizers:decoders.ByteLevel []
    # Automatically add bos token to sequence start
    post_processor: !singleton:tokenizers:processors.TemplateProcessing
        single: "<bos> $A"
        special_tokens: [ !tuple [ "<bos>", {{ ns.bos_token_id }} ] ]
    trainer: !singleton:tokenizers.trainers:BpeTrainer
        vocab_size: {{ ns.vocab_size }}
        initial_alphabet: !singleton:tokenizers:pre_tokenizers.ByteLevel.alphabet []
        special_tokens: !list [!singleton:values [*special_tokens_map]]
        show_progress: False
<< endblock tokenizer_trainer
