-- extends "configs/base_train_config.yaml"
-- from 'inc/formatting.jinja' import h2, sep


-- block experiment_metadata
    == super()
    -- set ns.CREATE_NEW_MODEL = True
    -- set ns.SAVE_MODEL = False
    -- set ns.TRAIN = True
    -- set ns.EVAL = False
-- endblock experiment_metadata


-- block variable_listing
    == super()
# ns.LOGGING_DIR: "{{ ns.LOGGING_DIR }}"
# ns.CREATE_NEW_MODEL: {{ ns.CREATE_NEW_MODEL }}
# ns.SAVE_MODEL: {{ ns.SAVE_MODEL }}
-- endblock variable_listing


-- block model_definition
-- filter trim()
    -- if ns.CREATE_NEW_MODEL
        -- block construct_new_model
# Undefined
        << endblock construct_new_model
    -- else
        -- block load_model
            -- include 'models/load_custom_model.yaml'
        << endblock load_model
    -- endif
-- endfilter
-- endblock model_definition


-- block trainer_callbacks
    -- include 'callbacks/loggers.yaml'
<< endblock trainer_callbacks


-- block datacollator
.define: &data_collator !callable:transformers:DataCollatorForLanguageModeling
    args:
        - *tokenizer
    kwargs:
        mlm: False
        return_tensors: pt
-- endblock datacollator


-- block trainer_definition
    -- include 'trainers/trainer.yaml'
-- endblock trainer_definition


-- block output_configuration
output_dir: "{{ ns.OUTPUT_DIR }}"
logging_dir: "{{ns.LOGGING_DIR}}"
experiment_name: "{{ ns.EXPERIMENT_NAME }}"
experiment_description: "{{ ns.EXPERIMENT_DESCRIPTION }}"
trainer: *trainer
do_save: {{ ns.SAVE_MODEL }}
do_train: {{ ns.TRAIN }}
do_eval: {{ ns.EVAL }}
-- endblock output_configuration