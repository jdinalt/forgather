-- extends 'models/abstract/custom_causal_lm.yaml'

-- block model_meta_config
    == super()
    -- set model_def.name = "Dynamic Causal Languange Model"
    -- set model_def.description = "This model's implemetation modules can be swapped out entirely through the configuraiton."
    -- set model_def.cls = 'DynamicCasualLM'
    -- set model_def.cfg_cls = 'DynamicCausalLMConfig'
    -- set model_def.config_path = joinpath(ns.model_src_dir, 'dynamic_causal_lm.py')
    -- set model_def.model_path = model_def.config_path
    ## path to file containing configuration class; be default, we assume they are the same.
    ## Code generation naming policy:
    ##   "required" : Only assign names to objects when they show up in more than on place in the graph.
    ##     This results in the most compact representation.
    ##   "named" : Assign names when required or if the object has been named in the definition.
    ##   "all" : Assign names to all objects; generate automatic names, when not specified.
    ##     This results in a very flat structure, but the hierarchy may not be readily apparent
    ##     and the is very verbose.
    -- set model_def.name_policy = "required"
-- endblock model_meta_config


## Note reversed order of super(), as we want to search from specific to general
-- block model_submodule_searchpath
    - "{{ joinpath(ns.forgather_dir, 'model_src', 'bits') }}"
    == super()
<< endblock model_submodule_searchpath


-- block model_bits required
## .define: &model_factory !singleton:.dynamic_causal_transformer:CasualLM@model_factory
<< endblock model_bits


-- block model_code_generator
.define: &model_code_writer !singleton:forgather.ml.construct:write_file@model_code_writer
    data: &model_code_generator !meta:forgather.codegen:generate_code@model_code_generator
        obj: *model_factory
        factory_name: "construct_model"
        relaxed_kwargs: True
        name_policy: "{{ model_def.name_policy }}"
    output_file: "{{ joinpath(ns.output_dir, 'model_factory.py') }}"
    return_value: "Model constructor generated by Forgather 1.0"
-- endblock model_code_generator


-- block model_config
    == super()
    # Add dependency on code generator
    code_generator: *model_code_writer
<< endblock model_config

