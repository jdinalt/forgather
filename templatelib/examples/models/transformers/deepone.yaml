-- extends 'models/causal_lm/custom_dynamic.yaml'

[model_meta_config]
    == super()
    -- set ns.model_name = "Deep One"
    -- set ns.model_description = "A big Deepnet model with ALiBi attention."
    -- set ns.model_short_name = "deepone"

[model_tokenizer]
    -- include 'tokenizers/wikitext/32k.yaml'

[model_bits]
    [loss_fn]
loss_fn: &loss_fn !singleton:.causal_loss:CausalLoss@loss_fn []

    [layer_norm_factory]
layer_norm_factory: &layer_norm_factory !partial:torch.nn:RMSNorm@layer_norm_factory
    normalized_shape: !var "hidden_size"
    eps: !var "rms_norm_eps"

    [feedforward_factory]
feedforward_factory: &feedforward_factory !partial:.glu_feedforward:GLUFeedforwardLayer@feedforward_factory
    d_model: !var "hidden_size"
    d_feedforward: !var "dim_feedforward"
    activation_factory: !partial:torch.nn.ReLU []
    dropout: !var "activation_dropout"
    
    [attention_factory]
attention_factory: &attention_factory !partial:.causal_alibi_attn:CausalAlibiAttn@attention_factory
    d_model: !var "hidden_size"
    num_heads: !var "num_attention_heads"
    dropout: !var "attention_dropout"
    bias: False
    sdpa_function: !partial:torch.nn.functional:scaled_dot_product_attention []
    # Make the ALiBi biases trainable weights
    trainable_alibi: True
    # Use alternative initialization for better trainable slope behavior
    alt_alibi_init: True

    [layer_factory]
layer_factory: &layer_factory !partial:.deepnet:DeepnetLayer@layer_factory
    feedforward_factory: *feedforward_factory
    attention_factory: *attention_factory
    norm_factory: *layer_norm_factory
    dropout: !var "layer_dropout"
    residual_dropout: !var "residual_dropout"
    alpha: !call:.deepnet:deepnet_alpha [ !var "num_hidden_layers", 0 ]

    [layer_stack]
layer_stack: &layer_stack !factory:.checkpoint_layer_stack:LayerStack@layer_stack
    layer_factory: *layer_factory
    num_hidden_layers: !var "num_hidden_layers"
    post_norm_factory: *layer_norm_factory
    enable_checkpoint: !var "enable_activation_checkpoint"
    checkpoint_stride: !var "checkpoint_stride"

    [output_decoder]
output_decoder: &output_decoder !factory:torch.nn:Linear@output_decoder
    in_features: !var "hidden_size"
    out_features: !var "vocab_size"
    bias: False

    [abs_positional_encoder]
absolute_pe: &absolute_pe null

    [input_encoder]
input_encoder: &input_encoder !factory:.input_encoder:InputEncoder@input_encoder
    d_model: !var "hidden_size"
    vocab_size: !var "vocab_size"
    dropout: !var "embedding_dropout"
    positional_encoder: *absolute_pe
    scale_sqrt_d_model: False

    [init_weights]
init_weights: &init_weights !partial:.init_weights:init_weights_by_regex@init_weights
    regex_list:
        - [ 'norm|alibi_slopes', "pass" ]
        - [ 'bias', "zeros" ]
        - [ 'embedding\.weight', "embedding" ]
        - [ 'feedforward|value_linear|output_linear', "deepnet" ]
        - [ 'attention|output_decoder', "linear" ]
    init_f_map:
        pass: !partial:.init_weights:init_pass
        zeros: !partial:torch.nn.init:zeros_ []
        embedding: !partial:.init_weights:init_embeddings
            padding_index: !var "pad_token_id"
        linear: !partial:torch.nn.init:xavier_uniform_ []
        deepnet: !partial:torch.nn.init:xavier_uniform_
            gain: !call:.deepnet:deepnet_beta [ !var "num_hidden_layers", 0 ]
    debug: False

    [model_factory]
model_factory: &model_factory !factory:.causal_lm:CasualLM@model_factory
    loss_fn: *loss_fn
    input_encoder: *input_encoder
    output_decoder: *output_decoder
    layer_stack: *layer_stack
    init_weights: *init_weights

[model_config]
    == super()
    hidden_size: 2048
    num_attention_heads: 16
    num_hidden_layers: 32
    max_sequence_length: !singleton:getattr
        - *tokenizer
        - "model_max_length"
    dim_feedforward: 5376
    embedding_dropout: 0.0
    rms_norm_eps: 1.0e-06
    layer_dropout: 0.0
    residual_dropout: 0.0
    attention_dropout: 0.0
    activation_dropout: 0.0
    enable_activation_checkpoint: False
    checkpoint_stride: 1

[model_code_generator]
    == super()
    # Deepone
    supports_gradient_checkpointing: True
    supports_sdpa: True
