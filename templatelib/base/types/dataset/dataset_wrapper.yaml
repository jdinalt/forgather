-- extends 'types/type.yaml'

## Optional
-- block config_metadata
    == super()
    -- set ns.config_name = "Dataset Wrapper"
    -- set ns.config_description = "Constucts dataset as a project."
    -- set ns.config_class = ns.config_class + ".dataset"
-- endblock config_metadata

-- block main_body

== h2('Tokenizer')

    -- block tokenizer
## Required, if dataset processing requires a tokenizer
tokenizer: &tokenizer !singleton:transformers:AutoTokenizer.from_pretrained@tokenizer
    - "{{ tokenizer_path | default('undefined') }}"
    << endblock tokenizer

== h2('Dataset')

    -- block dataset required
## train_dataset: &train_dataset
## eval_dataset:  &eval_dataset
    -- endblock dataset

<< endblock main_body

-- block meta_output
meta: !dict
    config_name: "{{ ns.datasets_name }}"
    config_description: "{{ ns.datasets_description }}"
    config_class: "{{ ns.config_class }}"
    main_feature: "{{ ns.datasets_main_feature }}"
<< endblock meta_output


-- block main_output
main:
    train: *train_dataset
    eval: *eval_dataset
<< endblock main_output
