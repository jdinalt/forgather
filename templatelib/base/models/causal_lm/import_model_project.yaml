## A simple wrapper to avoid writing boiler-plate for the common use-case
## of loading a model from a Forgather project.
## Arguments:
##   ns.model_project_dir: str: Path to a Forgather project
##   ns.model_project_config: str: Project configuration name
##   ns.debug_model_project: bool: Enable sub-project load debugging
## Outputs:
##   tokenizer: PretrainedTokenizer: Tokenizer, loaded from project
##   model: Callable[PretrainedModel]: A model constructor
# Import a model definition from another Forgather project
.define: &model_dict !call:forgather:from_project
    project_dir: "{{ ns.model_project_dir }}"
    config_template: "{{ ns.model_project_config }}"
    targets: [  "pretrained_tokenizer", "pretrained_model_ctor" ] 
    pp_kwargs:
        output_dir: "{{ ns.output_dir }}"
    pp_debug: {{ ns.debug_model_project | default(False) }}
    model_constructor_args: *model_constructor_args

tokenizer: &tokenizer !call:getitem [ *model_dict, 'pretrained_tokenizer' ]
model: &model !call:getitem [ *model_dict, 'pretrained_model_ctor' ]
